{"version":3,"sources":["components/GermanoCard.tsx","components/MyStoryLine.tsx","utils.ts","components/MySummary.tsx","components/SelectableImage.tsx","components/ProjectCard.tsx","data/projects.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GermanoCard","content","language","descriptions","flavorText","type","cardColor","name","manaCost","artUrl","fotterRightText","MyStoryLine","Card","Timeline","position","TimelineItem","TimelineOppositeContent","color","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","href","target","rel","getAge","dateString","today","Date","birthDate","age","getFullYear","m","getMonth","getDate","MySummary","CardContent","Typography","variant","ListItem","ListItemText","primary","secondary","SelectableImage","image","onClick","CardActionArea","CardMedia","component","url","alt","description","ProjectCard","title","role","achievements","featuredImage","onImageClick","images","duration","links","displayAsMobile","technologies","Grid","container","spacing","item","xs","md","Box","display","flexDirection","justifyContent","flex","alignItems","gutterBottom","IconButton","style","fontWeight","join","alignSelf","map","index","textAlign","fontStyle","pt","Accordion","AccordionSummary","expandIcon","id","AccordionDetails","achievement","projects","process","link","App","props","theme","createTheme","myProjectsSection","useRef","aboutMeSection","sayHiSection","useState","selectedImage","setSelectedImage","sections","ref","activeSection","useScrollSpy","sectionElementRefs","offsetPx","scrollTo","current","scrollIntoView","behavior","snapProperties","scrollMarginTop","mixins","toolbar","minHeight","scrollSnapAlign","StyledEngineProvider","injectFirst","CssBaseline","ThemeProvider","AppBar","Toolbar","fontFamily","flexGrow","section","marginLeft","undefined","Button","Dialog","open","onClose","maxWidth","DialogTitle","DialogContent","Paper","src","width","background","backgroundSize","height","maxHeight","bottom","paddingBottom","paddingTop","backgroundColor","paddingRight","margin","direction","align","project","transformOrigin","transform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.df5b8e35.chunk.js","sourcesContent":["import 'reactjs-mtg-card/dist/index.css'\nimport { MagicCard, CardProps } from 'reactjs-mtg-card'\n\nexport type GermanoCardProps = {\n    language: 'pt' | 'en'\n}\n\nconst GermanoCard: React.FC<GermanoCardProps> = ({ language }) => {\n\n    const content: CardProps = language === 'en'\n        ? {\n            descriptions: [\"{1}{U}: Target programmer can't be blocked until end of turn\"],\n            flavorText: [ '\"Sanity test!\"' ],\n            type: 'Creature \\u2013 Human Developer',\n        }\n        : {\n            descriptions: ['{1}{U}: Programador alvo não pode ser bloqueado até final do turno'],\n            flavorText: [ '\"Teste de sanidade!\"' ],\n            type: 'Criatura \\u2013 Humano Desenvolvedor',\n        }\n\n    return (\n        <MagicCard\n            cardColor='blue'\n            name='Germano Gascho'\n            manaCost='{1}{U}'\n            artUrl=\"https://avatars.githubusercontent.com/u/35080245?s=400&u=12342e8d1aedc558809a8c5464e2ebf653efc9ab&v=4\"\n            fotterRightText={[\n                '&#x99; &amp; &#169; 2021 Germano Gascho',\n            ]}\n            {...content}\n        />\n    )\n}\n\nexport default GermanoCard\n","import { Timeline, TimelineItem, TimelineOppositeContent, TimelineSeparator, TimelineDot, TimelineConnector, TimelineContent } from '@mui/lab'\nimport { Card } from '@mui/material'\n\nconst MyStoryLine = () => {\n    return (\n        <Card>\n            <Timeline position=\"alternate\">\n                <TimelineItem>\n                    <TimelineOppositeContent color=\"text.secondary\">\n                        2012\n                    </TimelineOppositeContent>\n                    <TimelineSeparator>\n                        <TimelineDot />\n                        <TimelineConnector />\n                    </TimelineSeparator>\n                    <TimelineContent>\n                        Started Computer Engineering at <a href=\"https://www.univali.br/\" target=\"_blank\" rel=\"noreferrer\">UNIVALI</a>\n                    </TimelineContent>\n                </TimelineItem>\n                <TimelineItem>\n                    <TimelineOppositeContent color=\"text.secondary\">\n                        2016\n                    </TimelineOppositeContent>\n                    <TimelineSeparator>\n                        <TimelineDot />\n                        <TimelineConnector />\n                    </TimelineSeparator>\n                    <TimelineContent>Finished college 🎓</TimelineContent>\n                </TimelineItem>\n                <TimelineItem>\n                    <TimelineOppositeContent color=\"text.secondary\">\n                        2017\n                    </TimelineOppositeContent>\n                    <TimelineSeparator>\n                        <TimelineDot />\n                        <TimelineConnector />\n                    </TimelineSeparator>\n                    <TimelineContent>\n                        Hired at <a href=\"https://www.adapcon.com.br\" target=\"_blank\" rel=\"noreferrer\">Adapcon</a>\n                    </TimelineContent>\n                </TimelineItem>\n                <TimelineItem>\n                    <TimelineOppositeContent color=\"text.secondary\">\n                        2019\n                    </TimelineOppositeContent>\n                    <TimelineSeparator>\n                        <TimelineDot />\n                        <TimelineConnector />\n                    </TimelineSeparator>\n                    <TimelineContent>\n                        Freelance career\n                    </TimelineContent>\n                </TimelineItem>\n                <TimelineItem>\n                    <TimelineOppositeContent color=\"text.secondary\">\n                        2020\n                    </TimelineOppositeContent>\n                    <TimelineSeparator>\n                        <TimelineDot />\n                        <TimelineConnector />\n                    </TimelineSeparator>\n                    <TimelineContent>\n                        Hired at <a href=\"https://www.almode.com/\" target=\"_blank\" rel=\"noreferrer\">Almode</a>\n                    </TimelineContent>\n                </TimelineItem>\n                <TimelineItem>\n                    <TimelineOppositeContent color=\"text.secondary\">\n                        2021\n                    </TimelineOppositeContent>\n                    <TimelineSeparator>\n                        <TimelineDot />\n                        <TimelineConnector />\n                    </TimelineSeparator>\n                    <TimelineContent> Own projects </TimelineContent>\n                </TimelineItem>\n                <TimelineItem>\n                    <TimelineOppositeContent color=\"text.secondary\">\n                        2022\n                    </TimelineOppositeContent>\n                    <TimelineSeparator>\n                        <TimelineDot />\n                        <TimelineConnector />\n                    </TimelineSeparator>\n                    <TimelineContent> Hired at <a href=\"https://www.groundbreaker.co/\" target=\"_blank\" rel=\"noreferrer\">Groundbreaker</a> </TimelineContent>\n                </TimelineItem>\n                <TimelineItem>\n                    <TimelineOppositeContent color=\"text.secondary\">\n                        Now\n                    </TimelineOppositeContent>\n                    <TimelineSeparator>\n                        <TimelineDot color=\"primary\" />\n                    </TimelineSeparator>\n                    <TimelineContent>Looking for new oportunities</TimelineContent>\n                </TimelineItem>\n            </Timeline>\n        </Card >\n    )\n}\n\nexport default MyStoryLine\n","export function getAge(dateString: string) {\n    const today = new Date();\n    const birthDate = new Date(dateString);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age--;\n    }\n    return age;\n}","import { Card, CardContent, ListItem, ListItemText, Typography } from '@mui/material'\nimport { getAge } from '../utils'\n\nconst MySummary = () => {\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\">\n                    Hi, I'm Germano\n                </Typography>\n            </CardContent>\n            <ListItem>\n                <ListItemText\n                    primary={`${getAge('1994/11/26')} years old \\u2013 🎂 11/26/1994`}\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary=\"Live in Brazil 🇧🇷\"\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={`+${getAge('2017/04/01')} years of experience. Bachelor's degree in computer engineering`}\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary=\"Main technologies\"\n                    secondary=\"Reactjs, JavaScript, TypeScript and NodeJS\"\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary=\"Skills\"\n                    secondary=\"Reactjs, Vuejs, Spring Boot, SQL, REST API, GraphQL, MongoDB, Mongoose, AWS (DynamoDB, S3, CloudFront, Elastic Beanstalk, IAM, RDS, Lambda), Firebase services\"\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary=\"Hobbies\"\n                    secondary=\"MTG card game, gameplay videos, metroidvania games, TV series and coding\"\n                />\n            </ListItem>\n        </Card>\n    )\n}\n\nexport default MySummary\n","import { CardActionArea, CardMedia } from \"@mui/material\"\n\nexport type ImageDisplay = {\n\tdescription: string\n\turl: string\n}\n\nexport interface Props {\n    image: ImageDisplay\n    onClick?: (image: ImageDisplay) => void \n}\n\nconst SelectableImage: React.FC<Props> = ({\n    image,\n    onClick,\n}) => (\n    <CardActionArea\n        onClick={() => onClick && onClick(image)}\n    >\n        <CardMedia\n            component=\"img\"\n            image={image.url}\n            alt={image.description}\n        />\n    </CardActionArea>\n)\n\nexport default SelectableImage","import { Accordion, AccordionDetails, AccordionSummary, Box, Card, CardContent, Grid, IconButton, Typography } from '@mui/material'\nimport { ChevronDown, OpenInNew } from 'mdi-material-ui'\nimport SelectableImage, { ImageDisplay } from './SelectableImage'\n\ninterface ExternalLink {\n    description: string\n    url: string\n}\n\ninterface Props {\n    title: string\n    description: string\n    role: string\n    technologies: string[]\n    achievements?: string[]\n    featuredImage?: ImageDisplay\n    onImageClick?: (image: ImageDisplay) => void\n    images?: ImageDisplay[]\n    duration: string\n    links?: ExternalLink[]\n    displayAsMobile?: boolean\n}\n\nconst ProjectCard = ({\n    title,\n    description,\n    role,\n    achievements,\n    featuredImage,\n    onImageClick,\n    images,\n    duration,\n    links,\n    displayAsMobile = false,\n    technologies,\n}: Props) => {\n    return (\n        <Card>\n            <CardContent>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={8}>\n                        <Box\n                            display='flex'\n                            flexDirection='column'\n                            justifyContent='space-between'\n                            flex={1}\n                        >\n                            <Box flex={1}>\n                                <Box\n                                    display='flex'\n                                    justifyContent='space-between'\n                                    alignItems='flex-start'\n                                >\n                                    <Typography variant=\"h3\" gutterBottom>\n                                        {title}\n                                    </Typography>\n                                    {links && <IconButton\n                                        href={links[0].url}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                    >\n                                        <OpenInNew color='primary' />\n                                    </IconButton>}\n                                </Box>\n                                <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n                                    {description}\n                                </Typography>\n                            </Box>\n                            <Box>\n                                <Typography variant=\"h6\" color=\"text.secondary\">\n                                    <span style={{ fontWeight: 'bold' }}> Role: </span> {role}\n                                </Typography>\n                                <Typography variant=\"h6\" color=\"text.secondary\">\n                                    <span style={{ fontWeight: 'bold' }}> Technologies: </span> {technologies.join(', ')}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12} md={4} alignSelf='center'>\n                        <Grid container spacing={2}>\n                            {!displayAsMobile\n                                ? (<>\n                                    {featuredImage && <Grid item xs={9}>\n                                        <SelectableImage\n                                            image={featuredImage}\n                                            onClick={onImageClick}\n                                        />\n                                    </Grid>}\n                                    {images && <Grid item xs={3}>\n                                        <Grid container spacing={2}>\n                                            {images.map((image, index) =>\n                                                <Grid item xs={12} key={index}>\n                                                    <SelectableImage\n                                                        image={image}\n                                                        onClick={onImageClick}\n                                                    />\n                                                </Grid>\n                                            )}\n                                        </Grid>\n                                    </Grid>}\n                                </>)\n                                : (<>\n                                    {images?.map((image, index) =>\n                                        <Grid item xs={4} key={index}>\n                                            <SelectableImage\n                                                image={image}\n                                                onClick={onImageClick}\n                                            />\n                                        </Grid>\n                                    )}\n                                </>)\n                            }\n                        </Grid>\n                        <Typography\n                            textAlign='center'\n                            fontStyle='italic'\n                            color='text.secondary' pt={2}\n                        >\n                            Click on the image to expand\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <Accordion>\n                <AccordionSummary\n                    expandIcon={<ChevronDown />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography color=\"primary\">Show more</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n                        <span style={{ fontWeight: 'bold' }}> Duration: </span> {duration}\n                    </Typography>\n                    {achievements && (<Typography variant=\"h6\" color=\"text.secondary\">\n                        <div style={{ fontWeight: 'bold' }}> Achievements: </div>\n                        <ul>\n                            {achievements.map(achievement => (\n                                <li>{achievement}</li>\n                            ))}\n                        </ul>\n                    </Typography>)}\n                </AccordionDetails>\n            </Accordion>\n        </Card>\n    )\n}\n\nexport default ProjectCard\n","export const projects: Project[] = [\n  {\n    title: \"Almode PDV\",\n    description: \"Complete POS solution with sales, payments, products management, stores, stock control, users, profiles management, customers plans and much more\",\n    role: \"Tech Lead\",\n    achievements: [\n      \"UX/UI Designer of the entire application from scratch\",\n      \"Participate on all important feature decisions\",\n      \"Led a team with 9 developers\",\n      \"Acted as owner of the product earning more attributions over time\",\n      \"Reverted a wasted 6 months development process to take only 4 weeks\",\n    ],\n    duration: \"12 months\",\n    featuredImage: {\n      description: 'Ongoing sale',\n      url: `${process.env.PUBLIC_URL}/img/almode/almode-2.png`,\n    },\n    images: [\n      {\n        description: 'Cash open',\n        url: `${process.env.PUBLIC_URL}/img/almode/almode-1.png`,\n      },\n      {\n        description: 'Payment process',\n        url: `${process.env.PUBLIC_URL}/img/almode/almode-3.png`,\n      },\n      {\n        description: 'Sales (darkmode)',\n        url: `${process.env.PUBLIC_URL}/img/almode/almode-4.png`,\n      },\n    ],\n    technologies: [\n      \"Vuejs\",\n      \"TypeScript\",\n      \"Java\",\n      \"AWS\",\n      \"PostgreSQL\",\n    ],\n    link: {\n      url: 'https://www.almode.com',\n      description: 'Website',\n    },\n  },\n  {\n    title: \"Self Menu\",\n    role: 'Product Owner',\n    duration: '4 Months',\n    description: \"Solo project to call waiter with the user's mobile device by a QR Code. The system includes a manager side for products, categories and you can even QR code customization\",\n    images: [\n      {\n        description: 'Admin view',\n        url: `${process.env.PUBLIC_URL}/img/self-menu/self-menu-1.png`,\n      },\n      {\n        description: 'QR Code generation',\n        url: `${process.env.PUBLIC_URL}/img/self-menu/self-menu-2.png`,\n      },\n      {\n        description: 'Order screen',\n        url: `${process.env.PUBLIC_URL}/img/self-menu/self-menu-3.png`,\n      },\n    ],\n    link: {\n      url: 'https://self-menu.web.app/60e3d8327ec3830a4c088911',\n      description: 'Menu Sample',\n    },\n    displayAsMobile: true,\n    technologies: [\n      \"ReactJS\",\n      \"TypeScript\",\n      \"NodeJS\",\n      \"GraphQL\",\n      \"Firebase services\",\n      'MongoDB',\n    ],\n  },\n  {\n    title: 'MobiHub',\n    description: 'A website that concentrate all real state at one place so you can select better price independent of who you finish the deal',\n    role: 'Product Owner',\n    duration: '4 Months',\n    technologies: [\n      'ReactJS',\n      'TypeScript',\n      'NextJS',\n      'MongoDB',\n      'AWS',\n      'Web Crawlers'\n    ],\n    featuredImage: {\n      description: 'Cash open',\n      url: `${process.env.PUBLIC_URL}/img/mobihub/mobihub-1.png`,\n    },\n  }\n]\n\nexport type ProjectImage = {\n  description: string\n  url: string\n}\n\nexport type ExternalLink = {\n  description: string\n  url: string\n}\n\nexport type Project = {\n  title: string\n  description: string\n  role: string\n  technologies: string[]\n  achievements?: string[]\n  featuredImage?: ProjectImage\n  onImageClick?: (image: ProjectImage) => void\n  images?: ProjectImage[]\n  duration: string\n  link?: ExternalLink\n  displayAsMobile?: boolean\n}","import {\n\tAppBar, Box, Button,\n\tCard,\n\tCardActionArea, CardContent, createTheme, CssBaseline, Dialog,\n\tDialogContent,\n\tDialogTitle,\n\tGrid, Paper, StyledEngineProvider, ThemeProvider, Toolbar,\n\tTypography\n} from '@mui/material';\nimport { ChevronDown } from 'mdi-material-ui';\nimport { useRef, useState } from 'react';\nimport useScrollSpy from 'react-use-scrollspy';\nimport './App.css';\nimport GermanoCard from './components/GermanoCard';\nimport MyStoryLine from './components/MyStoryLine';\nimport MySummary from './components/MySummary';\nimport ProjectCard from './components/ProjectCard';\nimport { ImageDisplay } from './components/SelectableImage';\nimport { projects } from './data/projects';\n\nconst App: React.FC = (props) => {\n\tconst theme = createTheme()\n\t// const root = useRef<HTMLDivElement>(document.getElementById('root'))\n\tconst myProjectsSection = useRef<HTMLDivElement>(null)\n\tconst aboutMeSection = useRef<HTMLDivElement>(null)\n\tconst sayHiSection = useRef<HTMLDivElement>(null)\n\tconst [selectedImage, setSelectedImage] = useState<ImageDisplay | null>(null)\n\n\tconst sections: PageSection[] = [\n\t\t{\n\t\t\tdescription: 'Projects',\n\t\t\tref: myProjectsSection,\n\t\t},\n\t\t{\n\t\t\tdescription: 'About Me',\n\t\t\tref: aboutMeSection,\n\t\t},\n\t\t{\n\t\t\tdescription: 'Say Hi',\n\t\t\tref: sayHiSection,\n\t\t},\n\t]\n\tconst activeSection = useScrollSpy({\n\t\tsectionElementRefs: sections.map(({ ref }) => ref),\n\t\toffsetPx: -400,\n\t})\n\n\tconst scrollTo = (ref: React.RefObject<HTMLDivElement>) => {\n\t\tif (!ref.current) return\n\t\tref.current.scrollIntoView({\n\t\t\tbehavior: 'smooth',\n\t\t})\n\t}\n\n\tconst scrollToProjects = () => {\n\t\tscrollTo(myProjectsSection)\n\t}\n\n\tconst snapProperties: React.CSSProperties = {\n\t\tscrollMarginTop: theme.mixins.toolbar.minHeight,\n\t\tscrollSnapAlign: 'start',\n\t}\n\n\treturn (\n\t\t<StyledEngineProvider injectFirst>\n\t\t\t<CssBaseline />\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<Box\n\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\tflexDirection=\"column\"\n\t\t\t\t\tminHeight=\"100vh\"\n\t\t\t\t>\n\t\t\t\t\t<AppBar variant=\"outlined\">\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<Typography fontFamily=\"Beleren\" variant=\"h4\">\n\t\t\t\t\t\t\t\tGG\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Box flexGrow={1} />\n\t\t\t\t\t\t\t{sections.map((section, index) => (\n\t\t\t\t\t\t\t\t<Box marginLeft={index ? 2 : undefined} key={index}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant={activeSection === index ? 'outlined' : 'text'}\n\t\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => scrollTo(section.ref)}\n\t\t\t\t\t\t\t\t\t> {section.description} </Button>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</AppBar>\n\n\t\t\t\t\t{selectedImage && (\n\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\topen\n\t\t\t\t\t\t\tonClose={() => setSelectedImage(null)}\n\t\t\t\t\t\t\tmaxWidth=\"lg\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DialogTitle>\n\t\t\t\t\t\t\t\t<Typography variant=\"h4\">\n\t\t\t\t\t\t\t\t\t{selectedImage.description}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc={selectedImage.url}\n\t\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\t\talt={selectedImage.description}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t)}\n\t\t\t\t\t<Box component='main' flex={1}>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t...snapProperties,\n\t\t\t\t\t\t\t\tbackground: `url(${process.env.PUBLIC_URL}/img/portfolio-bg.jpg) no-repeat`,\n\t\t\t\t\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\theight='100vh'\n\t\t\t\t\t\t\tmaxHeight='905px'\n\t\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\t\tjustifyContent='center'\n\t\t\t\t\t\t\tflexDirection='column'\n\t\t\t\t\t\t\tcolor='white'\n\t\t\t\t\t\t\ttextAlign='center'\n\t\t\t\t\t\t\tposition='relative'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography variant=\"h2\" gutterBottom> Looking for a Developer? </Typography>\n\t\t\t\t\t\t\t<Typography variant=\"h4\"> Someone passionate about code </Typography>\n\t\t\t\t\t\t\t<CardActionArea\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\tbottom: '0px',\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\tpaddingBottom: theme.spacing(2),\n\t\t\t\t\t\t\t\t\tpaddingTop: theme.spacing(2),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={scrollToProjects}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t\t\t\t<div> Check out my projects! </div>\n\t\t\t\t\t\t\t\t\t<ChevronDown />\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</CardActionArea>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'lightcyan' }}\n\t\t\t\t\t\t\tpaddingRight={theme.spacing(2)}\n\t\t\t\t\t\t\tpaddingBottom={theme.spacing(2)}\n\t\t\t\t\t\t\tminHeight='calc(100vh - 64px)'\n\t\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\tmaxWidth=\"lg\"\n\t\t\t\t\t\t\t\tmargin=\"auto\"\n\t\t\t\t\t\t\t\tstyle={{ ...snapProperties }}\n\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\tstyle={{ ...snapProperties }}\n\t\t\t\t\t\t\t\t\tref={myProjectsSection}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h2\" align=\"center\" gutterBottom> Projects </Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t{projects.map(project => (\n\t\t\t\t\t\t\t\t\t<Grid item style={{ ...snapProperties }}>\n\t\t\t\t\t\t\t\t\t\t<ProjectCard\n\t\t\t\t\t\t\t\t\t\t\t{...project}\n\t\t\t\t\t\t\t\t\t\t\tonImageClick={setSelectedImage}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\t\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'darkcyan' }}\n\t\t\t\t\t\t\tpaddingRight={theme.spacing(2)}\n\t\t\t\t\t\t\tpaddingBottom={theme.spacing(2)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\tmaxWidth=\"md\"\n\t\t\t\t\t\t\t\tmargin=\"auto\"\n\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\tminHeight=\"calc(100vh - 64px)\"\n\t\t\t\t\t\t\t\tstyle={{ ...snapProperties }}\n\t\t\t\t\t\t\t\tref={aboutMeSection}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tAbout Me\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\txs=\"auto\"\n\t\t\t\t\t\t\t\t\tstyle={{ color: 'initial' }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\ttransformOrigin: '0 0',\n\t\t\t\t\t\t\t\t\t\t\ttransform: `translate(0, 0) scale(0.75)`,\n\t\t\t\t\t\t\t\t\t\t\theight: `${0.75 * 700}px`,\n\t\t\t\t\t\t\t\t\t\t\twidth: `${0.75 * 500}px`,\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%',\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<GermanoCard language=\"en\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\txs\n\t\t\t\t\t\t\t\t\tpaddingRight={theme.spacing(2)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MySummary/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\tmaxWidth=\"lg\"\n\t\t\t\t\t\t\t\tmargin=\"auto\"\n\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\tminHeight=\"calc(100vh - 64px)\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tStory Line\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid container item xs={12} spacing={theme.spacing(2)} style={{ ...snapProperties }}>\n\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\t\t\t\tpaddingRight={theme.spacing(2)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<MyStoryLine/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'lightcyan' }}\n\t\t\t\t\t\t\tpaddingRight={theme.spacing(2)}\n\t\t\t\t\t\t\tpaddingBottom={theme.spacing(2)}\n\t\t\t\t\t\t\tminHeight='calc(100vh - 64px)'\n\t\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\tmaxWidth=\"md\"\n\t\t\t\t\t\t\t\tmargin=\"auto\"\n\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\tminHeight=\"calc(100vh - 64px)\"\n\t\t\t\t\t\t\t\tstyle={{ ...snapProperties }}\n\t\t\t\t\t\t\t\tref={aboutMeSection}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tGet In Touch\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Card style={{ maxWidth: '420px', margin: 'auto' }}>\n\t\t\t\t\t\t\t\t\t\t\t<CardContent style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\t\t\t\t\t\t\tI'm looking for new oportunities, so is a good posibility to you say hi\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\t\t\t\t\t\t\thref='mailto:germanogascho@gmail.com'\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tSay Hi\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</ThemeProvider>\n\t\t</StyledEngineProvider>\n\t);\n}\n\ntype PageSection = {\n\tdescription: string\n\tref: React.RefObject<HTMLDivElement>\n}\n\ntype Skill = {\n\tdescription: string\n\ttag: string[]\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}